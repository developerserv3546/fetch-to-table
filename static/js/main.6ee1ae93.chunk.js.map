{"version":3,"sources":["images/sort.svg","components/AddUser.js","components/EditableCell.js","utils/Constant.js","components/TableHeadCell.js","components/Table.js","App.js","utils/UserUtil.js","utils/TableUtil.js","serviceWorker.js","index.js"],"names":["module","exports","AddUser","props","useState","name","setName","username","setUsername","email","setEmail","street","setStreet","suite","setSuite","city","setCity","zipcode","setZipcode","phone","setPhone","website","setWebsite","companyName","setCompanyName","catchPhrase","setCatchPhrase","bs","setBS","className","scope","id","type","placeholder","value","onChange","e","target","colSpan","role","onClick","setAddUserMode","user","address","company","addUser","onSave","disabled","trim","length","EditableCell","isEditMode","setEditMode","data","setValue","onDoubleClick","editUser","cellKey","TableHeadCell","isAsc","setAsc","sortBy","text","toLowerCase","includes","rowSpan","src","sortImg","alt","Table","isAddUserMode","users","map","el","key","App","isLoaded","setLoaded","isLoading","setLoading","setUsers","fetch","then","response","json","catch","error","console","log","aria-hidden","hidden","newUsers","push","setUserValueByKey","asc","sortedUsers","sort","a","b","getSortedBy","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.6ee1ae93.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sort.6ddc9b6d.svg\";","import React, {useState} from \"react\";\n\nfunction AddUser(props) {\n\n    const [name, setName] = useState('');\n    const [username, setUsername] = useState('');\n    const [email, setEmail] = useState('');\n    const [street, setStreet] = useState('');\n    const [suite, setSuite] = useState('');\n    const [city, setCity] = useState('');\n    const [zipcode, setZipcode] = useState('');\n    const [phone, setPhone] = useState('');\n    const [website, setWebsite] = useState('');\n    const [companyName, setCompanyName] = useState('');\n    const [catchPhrase, setCatchPhrase] = useState('');\n    const [bs, setBS] = useState('');\n\n    const onSave = () => {\n        const user = {\n            id: props.id,\n            name: name,\n            username: username,\n            email: email,\n            address: {\n                street: street,\n                suite: suite,\n                city: city,\n                zipcode: zipcode\n            },\n            phone: phone,\n            website: website,\n            company: {\n                name: companyName,\n                catchPhrase: catchPhrase,\n                bs: bs\n            }\n        };\n\n        props.addUser(user);\n    };\n\n\n    return (\n        <>\n            <tr className=\"border-0 no-hover\">\n                <th scope=\"row\">{props.id}</th>\n                <td><input type=\"text\" className=\"form-control\" placeholder=\"Name...\" value={name}\n                           onChange={e => setName(e.target.value)}/></td>\n                <td><input type=\"text\" className=\"form-control\" placeholder=\"Username...\" value={username}\n                           onChange={e => setUsername(e.target.value)}/></td>\n                <td><input type=\"text\" className=\"form-control\" placeholder=\"Email...\" value={email}\n                           onChange={e => setEmail(e.target.value)}/></td>\n                <td><input type=\"text\" className=\"form-control\" placeholder=\"Street...\" value={street}\n                           onChange={e => setStreet(e.target.value)}/></td>\n                <td><input type=\"text\" className=\"form-control\" placeholder=\"Suite...\" value={suite}\n                           onChange={e => setSuite(e.target.value)}/></td>\n                <td><input type=\"text\" className=\"form-control\" placeholder=\"City...\" value={city}\n                           onChange={e => setCity(e.target.value)}/></td>\n                <td><input type=\"text\" className=\"form-control\" placeholder=\"Zip Code...\" value={zipcode}\n                           onChange={e => setZipcode(e.target.value)}/></td>\n                <td><input type=\"text\" className=\"form-control\" placeholder=\"Phone...\" value={phone}\n                           onChange={e => setPhone(e.target.value)}/></td>\n                <td><input type=\"text\" className=\"form-control\" placeholder=\"Website...\" value={website}\n                           onChange={e => setWebsite(e.target.value)}/></td>\n                <td><input type=\"text\" className=\"form-control\" placeholder=\"Company Name...\" value={companyName}\n                           onChange={e => setCompanyName(e.target.value)}/></td>\n                <td><input type=\"text\" className=\"form-control\" placeholder=\"Catch Phrase...\" value={catchPhrase}\n                           onChange={e => setCatchPhrase(e.target.value)}/></td>\n                <td><input type=\"text\" className=\"form-control\" placeholder=\"BS...\" value={bs}\n                           onChange={e => setBS(e.target.value)}/></td>\n            </tr>\n            <tr className=\"no-hover\">\n                <td colSpan=\"13\" className=\"text-center align-middle\">\n                    <div className=\"btn-group btn-group mw-200px\" role=\"group\">\n                        <button onClick={() => props.setAddUserMode(false)} className=\"btn btn-dark\">Cancel</button>\n                        <button onClick={() => onSave()} className=\"btn btn-success\" disabled={!name.trim().length}>Save</button>\n                    </div>\n                </td>\n            </tr>\n        </>\n    );\n};\n\nexport default AddUser;","import React, {useState} from \"react\";\n\nfunction EditableCell(props) {\n\n    const [isEditMode, setEditMode] = useState(false);\n    const [value, setValue] = useState(props.data);\n\n    const onClickSave = () => {\n        props.editUser(props.id, props.cellKey, value);\n        setEditMode(false);\n    };\n\n    const showEditMode = () => {\n        return (\n            <div>\n                <input type=\"text\" className=\"form-control mb-1\" value={value}\n                       onChange={(e) => setValue(e.target.value)}/>\n                <div className=\"btn-group btn-group-sm w-100 mw-200px\" role=\"group\">\n                    <button onClick={() => setEditMode(false)} className=\"w-50 btn btn-dark\">Cancel</button>\n                    <button onClick={() => onClickSave()} className=\"w-50 btn btn-success\">Save</button>\n                </div>\n            </div>\n        );\n    };\n\n    return (\n        <td className=\"mw-120px\" onDoubleClick={() => setEditMode(true)}>{!isEditMode ? props.data : showEditMode()}</td>\n    );\n};\n\nexport default EditableCell;","export const cellKey = {\n    name: 1,\n    username: 2,\n    email: 3,\n    street: 4,\n    suite: 5,\n    city: 6,\n    zipcode: 7,\n    phone: 8,\n    website: 9,\n    companyName: 10,\n    catchPhrase: 11,\n    bs: 12\n};","import React, {useState} from \"react\";\nimport sortImg from '../images/sort.svg'\n\nfunction TableHeadCell(props) {\n\n    const [isAsc, setAsc] = useState(true);\n\n    const onClick = () => {\n        props.sortBy(props.text.toLowerCase(), isAsc);\n        setAsc(!isAsc);\n    }\n\n    const showTableHeadCell = () => {\n        if (['#', 'Name', 'Username', 'Email', 'Phone', 'Website'].includes(props.text)) {\n            return <th onClick={() => onClick()} scope=\"col\" rowSpan=\"2\"\n                       className=\"text-center align-middle mw-80px\">{props.text} <img src={sortImg} alt={'sort by'}/>\n            </th>;\n        } else if (props.text === 'Address') {\n            return <th scope=\"col\" rowSpan=\"1\" colSpan=\"4\" className=\"text-center align-middle\">{props.text}</th>;\n        } else if (props.text === 'Company') {\n            return <th scope=\"col\" rowSpan=\"1\" colSpan=\"3\" className=\"text-center align-middle\">{props.text}</th>;\n        } else {\n            return <th onClick={() => onClick()} className=\"text-center align-middle\">{props.text} <img src={sortImg}\n                                                                                                        alt={'sort by'}/>\n            </th>;\n        }\n    };\n\n    return (\n        <>\n            {showTableHeadCell()}\n        </>\n    );\n};\n\nexport default TableHeadCell;","import React from \"react\";\nimport AddUser from \"./AddUser\";\nimport EditableCell from \"./EditableCell\";\nimport {cellKey} from '../utils/Constant';\nimport TableHeadCell from \"./TableHeadCell\";\n\nfunction Table(props) {\n\n    return (\n        <table className=\"table table-hover\">\n            <thead className=\"thead-dark\">\n            <tr>\n                <TableHeadCell text={'#'} sortBy={props.sortBy}/>\n                <TableHeadCell text={'Name'} sortBy={props.sortBy}/>\n                <TableHeadCell text={'Username'} sortBy={props.sortBy}/>\n                <TableHeadCell text={'Email'} sortBy={props.sortBy}/>\n                <TableHeadCell text={'Address'} sortBy={props.sortBy}/>\n                <TableHeadCell text={'Phone'} sortBy={props.sortBy}/>\n                <TableHeadCell text={'Website'} sortBy={props.sortBy}/>\n                <TableHeadCell text={'Company'} sortBy={props.sortBy}/>\n            </tr>\n            <tr>\n                <TableHeadCell text={'Street'} sortBy={props.sortBy}/>\n                <TableHeadCell text={'Suite'} sortBy={props.sortBy}/>\n                <TableHeadCell text={'City'} sortBy={props.sortBy}/>\n                <TableHeadCell text={'Zipcode'} sortBy={props.sortBy}/>\n                <TableHeadCell text={'Name '} sortBy={props.sortBy}/>\n                <TableHeadCell text={'Catch Phrase'} sortBy={props.sortBy}/>\n                <TableHeadCell text={'BS'} sortBy={props.sortBy}/>\n            </tr>\n            </thead>\n            <tbody>\n            {props.isAddUserMode ? <AddUser\n                addUser={props.addUser}\n                id={props.users.length + 1}\n                setAddUserMode={props.setAddUserMode}/> : null}\n            {props.users.map((el) => {\n                return (\n                    <tr key={el.id}>\n                        <th scope=\"row\">{el.id}</th>\n                        <EditableCell id={el.id} data={el.name} cellKey={cellKey.name} editUser={props.editUser}/>\n                        <EditableCell id={el.id} data={el.username} cellKey={cellKey.username}\n                                      editUser={props.editUser}/>\n                        <EditableCell id={el.id} data={el.email} cellKey={cellKey.email} editUser={props.editUser}/>\n                        <EditableCell id={el.id} data={el.address.street} cellKey={cellKey.street}\n                                      editUser={props.editUser}/>\n                        <EditableCell id={el.id} data={el.address.suite} cellKey={cellKey.suite}\n                                      editUser={props.editUser}/>\n                        <EditableCell id={el.id} data={el.address.city} cellKey={cellKey.city}\n                                      editUser={props.editUser}/>\n                        <EditableCell id={el.id} data={el.address.zipcode} cellKey={cellKey.zipcode}\n                                      editUser={props.editUser}/>\n                        <EditableCell id={el.id} data={el.phone} cellKey={cellKey.phone} editUser={props.editUser}/>\n                        <EditableCell id={el.id} data={el.website} cellKey={cellKey.website} editUser={props.editUser}/>\n                        <EditableCell id={el.id} data={el.company.name} cellKey={cellKey.companyName}\n                                      editUser={props.editUser}/>\n                        <EditableCell id={el.id} data={el.company.catchPhrase} cellKey={cellKey.catchPhrase}\n                                      editUser={props.editUser}/>\n                        <EditableCell id={el.id} data={el.company.bs} cellKey={cellKey.bs} editUser={props.editUser}/>\n                    </tr>\n                );\n            })}\n            </tbody>\n        </table>\n    );\n};\n\nexport default Table;","import React, {useState} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Table from \"./components/Table\";\nimport {setUserValueByKey} from './utils/UserUtil'\nimport {getSortedBy} from \"./utils/TableUtil\";\n\nfunction App() {\n\n    const [isLoaded, setLoaded] = useState(false);\n    const [isLoading, setLoading] = useState(false);\n    const [users, setUsers] = useState([]);\n    const [isAddUserMode, setAddUserMode] = useState(false);\n\n    const loadUsers = () => {\n        setLoading(true)\n        fetch('https://jsonplaceholder.cypress.io/users')\n            .then(response => response.json())\n            .then(data => {\n                setUsers(data);\n                setLoaded(true);\n                setAddUserMode(false);\n                setLoading(false);\n            }).catch(error => console.log(error))\n    };\n\n    const editUser = (id, key, value) => {\n        const newUsers = users.map(el => {\n            if (el.id === id) {\n                setUserValueByKey(el, key, value);\n            }\n            return el;\n        });\n        setUsers(newUsers);\n    };\n\n    const addUser = (user) => {\n        const newUsers = [...users];\n        newUsers.push(user);\n        setUsers(newUsers);\n        setAddUserMode(false);\n    };\n\n    const sortBy = (key, asc) => {\n        const sortedUsers = getSortedBy(key, users, asc);\n        setUsers(sortedUsers);\n    };\n\n\n    return (\n        <div className=\"container-fluid p-0\">\n            <div className=\"text-center align-middle my-2\">\n                <button disabled={isLoading} className=\"btn btn-dark m-1\"\n                        onClick={() => loadUsers()}>{!isLoaded ? 'Load' : 'Reload'}&nbsp;<span\n                    className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\" hidden={!isLoading}/></button>\n                <button className=\"btn btn-dark m-1\" onClick={() => setAddUserMode(true)} hidden={isAddUserMode}\n                        disabled={!isLoaded}>Add User\n                </button>\n            </div>\n            <div>\n                {isLoaded &&\n                <Table\n                    users={users}\n                    isAddUserMode={isAddUserMode}\n                    addUser={addUser}\n                    editUser={editUser}\n                    setAddUserMode={setAddUserMode}\n                    sortBy={sortBy}/>\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import {cellKey} from \"./Constant\";\n\nexport const setUserValueByKey = (el, key, value) => {\n    switch (key) {\n        case cellKey.name:\n            el.name = value;\n            break;\n        case cellKey.username:\n            el.username = value;\n            break;\n        case cellKey.email:\n            el.email = value;\n            break;\n        case cellKey.street:\n            el.address.street = value;\n            break;\n        case cellKey.suite:\n            el.address.suite = value;\n            break;\n        case cellKey.city:\n            el.address.city = value;\n            break;\n        case cellKey.zipcode:\n            el.address.zipcode = value;\n            break;\n        case cellKey.phone:\n            el.phone = value;\n            break;\n        case cellKey.website:\n            el.website = value;\n            break;\n        case cellKey.companyName:\n            el.company.name = value;\n            break;\n        case cellKey.catchPhrase:\n            el.company.catchPhrase = value;\n            break;\n        default:\n            el.company.bs = value;\n    }\n};","export const getSortedBy = (key, users, asc) => {\n\n    const sortedUsers = [...users];\n    sortedUsers.sort((a, b) => {\n        switch (key) {\n            case '#':\n                return a.id < b.id ? (asc ? -1 : 1) : (asc ? 1 : -1);\n            case 'name':\n                return a.name < b.name ? (asc ? -1 : 1) : (asc ? 1 : -1);\n            case 'username':\n                return a.username < b.username ? (asc ? -1 : 1) : (asc ? 1 : -1);\n            case 'email':\n                return a.email < b.email ? (asc ? -1 : 1) : (asc ? 1 : -1);\n            case 'street':\n                return a.address.street < b.address.street ? (asc ? -1 : 1) : (asc ? 1 : -1);\n            case 'suite':\n                return a.address.suite < b.address.suite ? (asc ? -1 : 1) : (asc ? 1 : -1);\n            case 'city':\n                return a.address.city < b.address.city ? (asc ? -1 : 1) : (asc ? 1 : -1);\n            case 'zipcode':\n                return a.address.zipcode < b.address.zipcode ? (asc ? -1 : 1) : (asc ? 1 : -1);\n            case 'phone':\n                return a.phone < b.phone ? (asc ? -1 : 1) : (asc ? 1 : -1);\n            case 'website':\n                return a.website < b.website ? (asc ? -1 : 1) : (asc ? 1 : -1);\n            case 'name ':\n                return a.company.name < b.company.name ? (asc ? -1 : 1) : (asc ? 1 : -1);\n            case 'catch phrase':\n                return a.company.catchPhrase < b.company.catchPhrase ? (asc ? -1 : 1) : (asc ? 1 : -1);\n            case 'bs':\n                return a.company.bs < b.company.bs ? (asc ? -1 : 1) : (asc ? 1 : -1);\n            default:\n                return 0;\n        }\n    });\n    console.log(sortedUsers)\n    return sortedUsers;\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}